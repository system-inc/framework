// Dependencies
var PropagatingEvent = Framework.require('system/events/PropagatingEvent.js');

// Class
var HtmlEvent = PropagatingEvent.extend({

	domEvent: null, // The native event emitted by the DOM
	trusted: null, // Set to true if the event was generated by a user action, and false when the event was created or modified by a script or dispatched via dispatchEvent

	stop: function() {
		//Console.standardInfo('HtmlEvent.stop()', this);

		if(this.domEvent) {
			Console.log('this.domEvent is set and', this.domEvent.stopImmediatePropagation);
			this.domEvent.stopImmediatePropagation();
		}

		return this.super.apply(this, arguments);
	},

	stopPropagation: function() {
		if(this.domEvent) {
			this.domEvent.stopPropagation();
		}

		return this.super.apply(this, arguments);
	},

	preventDefault: function() {
		if(this.domEvent) {
			this.domEvent.preventDefault();
		}

		return this.super.apply(this, arguments);
	},

});

// Static methods

HtmlEvent.is = function(value) {
	return Class.isInstance(value, HtmlEvent);
};

// Export
module.exports = HtmlEvent;