{
	title: 'Framework',
	version: '0.1.0',
	description: 'Proctor runs tests and reports if they succeeded or failed.',
	command: {
		usage: "node framework/proctor/command/Project.js (Node)\n./framework/scripts/proctor-command.sh (OS X)\nsh framework\\scripts\\proctor-command.sh (Windows)",
		supplementalNotes: 'Visit https://www.system.inc/framework/documentation/testing/ to learn more about testing.',
		options: [
			{
				identifier: 'path',
				type: 'string',
				defaultValue: null,
				description: 'The path containing tests to run.',
				aliases: [
					'p',
				],
			},
			{
				identifier: 'filePattern',
				type: 'string',
				defaultValue: null,
				description: 'A pattern used to filter which test files will be run.',
				aliases: [
					'f',
				],
			},
			{
				identifier: 'methodPattern',
				type: 'string',
				defaultValue: null,
				description: 'A pattern used to filter which test class methods will be run.',
				aliases: [
					'm',
				],
			},
			{
				identifier: 'reporter',
				type: 'string',
				defaultValue: 'standard',
				description: 'The test reporter to use. Currently, "standard", "dot", and "concise" are available.',
				aliases: [
					'r',
				],
			},
			{
				identifier: 'supervise',
				type: 'boolean',
				defaultValue: false,
				description: 'Watch for changes and run tests when changes happen. Either "true" or "false".',
				aliases: [
					's',
				],
			},
			{
				identifier: 'breakOnError',
				type: 'boolean',
				defaultValue: false,
				description: 'Stop running tests on the first error encountered. Either "true" or "false".',
				aliases: [
					'b',
					'break',
				],
			},
		],
	},
	// List all modules to test
	modules: {
		archive: {},
		database: {
			databases: {
				frameworkTest: {
					host: 'localhost',
					username: 'framework_test',
					password: 'framework_test',
					databaseName: 'framework_test',
				}
			}
		},
		//electron: {},
		ffmpeg: {},
		test: {},
		webServer: {},
	},
}